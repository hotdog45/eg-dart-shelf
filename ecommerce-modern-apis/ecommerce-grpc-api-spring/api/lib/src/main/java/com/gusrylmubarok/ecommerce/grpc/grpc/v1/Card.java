// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PaymentGatewayService.proto

package com.gusrylmubarok.ecommerce.grpc.grpc.v1;

/**
 * Protobuf type {@code com.gusrylmubarok.v1.Card}
 */
public final class Card extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.gusrylmubarok.v1.Card)
    CardOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Card.newBuilder() to construct.
  private Card(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Card() {
    id_ = "";
    name_ = "";
    brand_ = "";
    country_ = "";
    fingerprint_ = "";
    funding_ = "";
    last4_ = "";
    customer_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Card();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Card(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            id_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 26: {
            com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address.Builder subBuilder = null;
            if (address_ != null) {
              subBuilder = address_.toBuilder();
            }
            address_ = input.readMessage(com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(address_);
              address_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            brand_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            country_ = s;
            break;
          }
          case 48: {

            expMonth_ = input.readUInt32();
            break;
          }
          case 56: {

            expYear_ = input.readUInt32();
            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();

            fingerprint_ = s;
            break;
          }
          case 74: {
            java.lang.String s = input.readStringRequireUtf8();

            funding_ = s;
            break;
          }
          case 80: {

            installments_ = input.readUInt32();
            break;
          }
          case 90: {
            java.lang.String s = input.readStringRequireUtf8();

            last4_ = s;
            break;
          }
          case 98: {
            java.lang.String s = input.readStringRequireUtf8();

            customer_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.gusrylmubarok.ecommerce.grpc.grpc.v1.PaymentGatewayService.internal_static_com_gusrylmubarok_v1_Card_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.gusrylmubarok.ecommerce.grpc.grpc.v1.PaymentGatewayService.internal_static_com_gusrylmubarok_v1_Card_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card.class, com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card.Builder.class);
  }

  public static final int ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object id_;
  /**
   * <code>string id = 1;</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NAME_FIELD_NUMBER = 2;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * Cardholder name.
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Cardholder name.
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ADDRESS_FIELD_NUMBER = 3;
  private com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address address_;
  /**
   * <code>.com.gusrylmubarok.v1.Address address = 3;</code>
   * @return Whether the address field is set.
   */
  @java.lang.Override
  public boolean hasAddress() {
    return address_ != null;
  }
  /**
   * <code>.com.gusrylmubarok.v1.Address address = 3;</code>
   * @return The address.
   */
  @java.lang.Override
  public com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address getAddress() {
    return address_ == null ? com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address.getDefaultInstance() : address_;
  }
  /**
   * <code>.com.gusrylmubarok.v1.Address address = 3;</code>
   */
  @java.lang.Override
  public com.gusrylmubarok.ecommerce.grpc.grpc.v1.AddressOrBuilder getAddressOrBuilder() {
    return getAddress();
  }

  public static final int BRAND_FIELD_NUMBER = 4;
  private volatile java.lang.Object brand_;
  /**
   * <pre>
   * Can be American Express, Diners Club, Discover, JCB, MasterCard, UnionPay, Visa, or Unknown.
   * </pre>
   *
   * <code>string brand = 4;</code>
   * @return The brand.
   */
  @java.lang.Override
  public java.lang.String getBrand() {
    java.lang.Object ref = brand_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      brand_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Can be American Express, Diners Club, Discover, JCB, MasterCard, UnionPay, Visa, or Unknown.
   * </pre>
   *
   * <code>string brand = 4;</code>
   * @return The bytes for brand.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getBrandBytes() {
    java.lang.Object ref = brand_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      brand_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COUNTRY_FIELD_NUMBER = 5;
  private volatile java.lang.Object country_;
  /**
   * <pre>
   * Two-letter ISO code representing the country of the card. You could use this attribute
   * to get a sense of the international breakdown of cards you’ve collected.
   * </pre>
   *
   * <code>string country = 5;</code>
   * @return The country.
   */
  @java.lang.Override
  public java.lang.String getCountry() {
    java.lang.Object ref = country_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      country_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Two-letter ISO code representing the country of the card. You could use this attribute
   * to get a sense of the international breakdown of cards you’ve collected.
   * </pre>
   *
   * <code>string country = 5;</code>
   * @return The bytes for country.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCountryBytes() {
    java.lang.Object ref = country_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      country_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EXPMONTH_FIELD_NUMBER = 6;
  private int expMonth_;
  /**
   * <pre>
   * Two-digit number representing the card’s expiration month.
   * </pre>
   *
   * <code>uint32 expMonth = 6;</code>
   * @return The expMonth.
   */
  @java.lang.Override
  public int getExpMonth() {
    return expMonth_;
  }

  public static final int EXPYEAR_FIELD_NUMBER = 7;
  private int expYear_;
  /**
   * <pre>
   * Four-digit number representing the card’s expiration year.
   * </pre>
   *
   * <code>uint32 expYear = 7;</code>
   * @return The expYear.
   */
  @java.lang.Override
  public int getExpYear() {
    return expYear_;
  }

  public static final int FINGERPRINT_FIELD_NUMBER = 8;
  private volatile java.lang.Object fingerprint_;
  /**
   * <pre>
   * Uniquely identifies this particular card number. You can use this attribute to check whether
   * two customers who’ve signed up with you are using the same card number, for example.
   * For payment methods that tokenize card information (Apple Pay, Google Pay),
   * the tokenized number might be provided instead of the underlying card number.
   * Starting May 1, 2021, card fingerprint in India for Connect will change to allow
   * two fingerprints for the same card — one for India and one for the rest of the world.
   * </pre>
   *
   * <code>string fingerprint = 8;</code>
   * @return The fingerprint.
   */
  @java.lang.Override
  public java.lang.String getFingerprint() {
    java.lang.Object ref = fingerprint_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      fingerprint_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Uniquely identifies this particular card number. You can use this attribute to check whether
   * two customers who’ve signed up with you are using the same card number, for example.
   * For payment methods that tokenize card information (Apple Pay, Google Pay),
   * the tokenized number might be provided instead of the underlying card number.
   * Starting May 1, 2021, card fingerprint in India for Connect will change to allow
   * two fingerprints for the same card — one for India and one for the rest of the world.
   * </pre>
   *
   * <code>string fingerprint = 8;</code>
   * @return The bytes for fingerprint.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFingerprintBytes() {
    java.lang.Object ref = fingerprint_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      fingerprint_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FUNDING_FIELD_NUMBER = 9;
  private volatile java.lang.Object funding_;
  /**
   * <pre>
   * Card funding type. Can be credit, debit, prepaid, or unknown.
   * </pre>
   *
   * <code>string funding = 9;</code>
   * @return The funding.
   */
  @java.lang.Override
  public java.lang.String getFunding() {
    java.lang.Object ref = funding_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      funding_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Card funding type. Can be credit, debit, prepaid, or unknown.
   * </pre>
   *
   * <code>string funding = 9;</code>
   * @return The bytes for funding.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFundingBytes() {
    java.lang.Object ref = funding_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      funding_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INSTALLMENTS_FIELD_NUMBER = 10;
  private int installments_;
  /**
   * <code>uint32 installments = 10;</code>
   * @return The installments.
   */
  @java.lang.Override
  public int getInstallments() {
    return installments_;
  }

  public static final int LAST4_FIELD_NUMBER = 11;
  private volatile java.lang.Object last4_;
  /**
   * <pre>
   * The last four digits of the card.
   * </pre>
   *
   * <code>string last4 = 11;</code>
   * @return The last4.
   */
  @java.lang.Override
  public java.lang.String getLast4() {
    java.lang.Object ref = last4_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      last4_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The last four digits of the card.
   * </pre>
   *
   * <code>string last4 = 11;</code>
   * @return The bytes for last4.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLast4Bytes() {
    java.lang.Object ref = last4_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      last4_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CUSTOMER_FIELD_NUMBER = 12;
  private volatile java.lang.Object customer_;
  /**
   * <pre>
   * The customer that this card belongs to. This attribute will not be in the card object
   * if the card belongs to an account or recipient instead.
   * </pre>
   *
   * <code>string customer = 12;</code>
   * @return The customer.
   */
  @java.lang.Override
  public java.lang.String getCustomer() {
    java.lang.Object ref = customer_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      customer_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The customer that this card belongs to. This attribute will not be in the card object
   * if the card belongs to an account or recipient instead.
   * </pre>
   *
   * <code>string customer = 12;</code>
   * @return The bytes for customer.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCustomerBytes() {
    java.lang.Object ref = customer_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      customer_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
    }
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
    }
    if (address_ != null) {
      output.writeMessage(3, getAddress());
    }
    if (!getBrandBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, brand_);
    }
    if (!getCountryBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, country_);
    }
    if (expMonth_ != 0) {
      output.writeUInt32(6, expMonth_);
    }
    if (expYear_ != 0) {
      output.writeUInt32(7, expYear_);
    }
    if (!getFingerprintBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, fingerprint_);
    }
    if (!getFundingBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, funding_);
    }
    if (installments_ != 0) {
      output.writeUInt32(10, installments_);
    }
    if (!getLast4Bytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, last4_);
    }
    if (!getCustomerBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 12, customer_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
    }
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
    }
    if (address_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getAddress());
    }
    if (!getBrandBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, brand_);
    }
    if (!getCountryBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, country_);
    }
    if (expMonth_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(6, expMonth_);
    }
    if (expYear_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(7, expYear_);
    }
    if (!getFingerprintBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, fingerprint_);
    }
    if (!getFundingBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, funding_);
    }
    if (installments_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(10, installments_);
    }
    if (!getLast4Bytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, last4_);
    }
    if (!getCustomerBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, customer_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card)) {
      return super.equals(obj);
    }
    com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card other = (com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card) obj;

    if (!getId()
        .equals(other.getId())) return false;
    if (!getName()
        .equals(other.getName())) return false;
    if (hasAddress() != other.hasAddress()) return false;
    if (hasAddress()) {
      if (!getAddress()
          .equals(other.getAddress())) return false;
    }
    if (!getBrand()
        .equals(other.getBrand())) return false;
    if (!getCountry()
        .equals(other.getCountry())) return false;
    if (getExpMonth()
        != other.getExpMonth()) return false;
    if (getExpYear()
        != other.getExpYear()) return false;
    if (!getFingerprint()
        .equals(other.getFingerprint())) return false;
    if (!getFunding()
        .equals(other.getFunding())) return false;
    if (getInstallments()
        != other.getInstallments()) return false;
    if (!getLast4()
        .equals(other.getLast4())) return false;
    if (!getCustomer()
        .equals(other.getCustomer())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasAddress()) {
      hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getAddress().hashCode();
    }
    hash = (37 * hash) + BRAND_FIELD_NUMBER;
    hash = (53 * hash) + getBrand().hashCode();
    hash = (37 * hash) + COUNTRY_FIELD_NUMBER;
    hash = (53 * hash) + getCountry().hashCode();
    hash = (37 * hash) + EXPMONTH_FIELD_NUMBER;
    hash = (53 * hash) + getExpMonth();
    hash = (37 * hash) + EXPYEAR_FIELD_NUMBER;
    hash = (53 * hash) + getExpYear();
    hash = (37 * hash) + FINGERPRINT_FIELD_NUMBER;
    hash = (53 * hash) + getFingerprint().hashCode();
    hash = (37 * hash) + FUNDING_FIELD_NUMBER;
    hash = (53 * hash) + getFunding().hashCode();
    hash = (37 * hash) + INSTALLMENTS_FIELD_NUMBER;
    hash = (53 * hash) + getInstallments();
    hash = (37 * hash) + LAST4_FIELD_NUMBER;
    hash = (53 * hash) + getLast4().hashCode();
    hash = (37 * hash) + CUSTOMER_FIELD_NUMBER;
    hash = (53 * hash) + getCustomer().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.gusrylmubarok.v1.Card}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.gusrylmubarok.v1.Card)
      com.gusrylmubarok.ecommerce.grpc.grpc.v1.CardOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.gusrylmubarok.ecommerce.grpc.grpc.v1.PaymentGatewayService.internal_static_com_gusrylmubarok_v1_Card_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.gusrylmubarok.ecommerce.grpc.grpc.v1.PaymentGatewayService.internal_static_com_gusrylmubarok_v1_Card_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card.class, com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card.Builder.class);
    }

    // Construct using com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      id_ = "";

      name_ = "";

      if (addressBuilder_ == null) {
        address_ = null;
      } else {
        address_ = null;
        addressBuilder_ = null;
      }
      brand_ = "";

      country_ = "";

      expMonth_ = 0;

      expYear_ = 0;

      fingerprint_ = "";

      funding_ = "";

      installments_ = 0;

      last4_ = "";

      customer_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.gusrylmubarok.ecommerce.grpc.grpc.v1.PaymentGatewayService.internal_static_com_gusrylmubarok_v1_Card_descriptor;
    }

    @java.lang.Override
    public com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card getDefaultInstanceForType() {
      return com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card.getDefaultInstance();
    }

    @java.lang.Override
    public com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card build() {
      com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card buildPartial() {
      com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card result = new com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card(this);
      result.id_ = id_;
      result.name_ = name_;
      if (addressBuilder_ == null) {
        result.address_ = address_;
      } else {
        result.address_ = addressBuilder_.build();
      }
      result.brand_ = brand_;
      result.country_ = country_;
      result.expMonth_ = expMonth_;
      result.expYear_ = expYear_;
      result.fingerprint_ = fingerprint_;
      result.funding_ = funding_;
      result.installments_ = installments_;
      result.last4_ = last4_;
      result.customer_ = customer_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card) {
        return mergeFrom((com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card other) {
      if (other == com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card.getDefaultInstance()) return this;
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        onChanged();
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.hasAddress()) {
        mergeAddress(other.getAddress());
      }
      if (!other.getBrand().isEmpty()) {
        brand_ = other.brand_;
        onChanged();
      }
      if (!other.getCountry().isEmpty()) {
        country_ = other.country_;
        onChanged();
      }
      if (other.getExpMonth() != 0) {
        setExpMonth(other.getExpMonth());
      }
      if (other.getExpYear() != 0) {
        setExpYear(other.getExpYear());
      }
      if (!other.getFingerprint().isEmpty()) {
        fingerprint_ = other.fingerprint_;
        onChanged();
      }
      if (!other.getFunding().isEmpty()) {
        funding_ = other.funding_;
        onChanged();
      }
      if (other.getInstallments() != 0) {
        setInstallments(other.getInstallments());
      }
      if (!other.getLast4().isEmpty()) {
        last4_ = other.last4_;
        onChanged();
      }
      if (!other.getCustomer().isEmpty()) {
        customer_ = other.customer_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object id_ = "";
    /**
     * <code>string id = 1;</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string id = 1;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      
      id_ = getDefaultInstance().getId();
      onChanged();
      return this;
    }
    /**
     * <code>string id = 1;</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      id_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Cardholder name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Cardholder name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Cardholder name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Cardholder name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Cardholder name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address address_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address, com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address.Builder, com.gusrylmubarok.ecommerce.grpc.grpc.v1.AddressOrBuilder> addressBuilder_;
    /**
     * <code>.com.gusrylmubarok.v1.Address address = 3;</code>
     * @return Whether the address field is set.
     */
    public boolean hasAddress() {
      return addressBuilder_ != null || address_ != null;
    }
    /**
     * <code>.com.gusrylmubarok.v1.Address address = 3;</code>
     * @return The address.
     */
    public com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address getAddress() {
      if (addressBuilder_ == null) {
        return address_ == null ? com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address.getDefaultInstance() : address_;
      } else {
        return addressBuilder_.getMessage();
      }
    }
    /**
     * <code>.com.gusrylmubarok.v1.Address address = 3;</code>
     */
    public Builder setAddress(com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address value) {
      if (addressBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        address_ = value;
        onChanged();
      } else {
        addressBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.com.gusrylmubarok.v1.Address address = 3;</code>
     */
    public Builder setAddress(
        com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address.Builder builderForValue) {
      if (addressBuilder_ == null) {
        address_ = builderForValue.build();
        onChanged();
      } else {
        addressBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.com.gusrylmubarok.v1.Address address = 3;</code>
     */
    public Builder mergeAddress(com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address value) {
      if (addressBuilder_ == null) {
        if (address_ != null) {
          address_ =
            com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address.newBuilder(address_).mergeFrom(value).buildPartial();
        } else {
          address_ = value;
        }
        onChanged();
      } else {
        addressBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.com.gusrylmubarok.v1.Address address = 3;</code>
     */
    public Builder clearAddress() {
      if (addressBuilder_ == null) {
        address_ = null;
        onChanged();
      } else {
        address_ = null;
        addressBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.com.gusrylmubarok.v1.Address address = 3;</code>
     */
    public com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address.Builder getAddressBuilder() {
      
      onChanged();
      return getAddressFieldBuilder().getBuilder();
    }
    /**
     * <code>.com.gusrylmubarok.v1.Address address = 3;</code>
     */
    public com.gusrylmubarok.ecommerce.grpc.grpc.v1.AddressOrBuilder getAddressOrBuilder() {
      if (addressBuilder_ != null) {
        return addressBuilder_.getMessageOrBuilder();
      } else {
        return address_ == null ?
            com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address.getDefaultInstance() : address_;
      }
    }
    /**
     * <code>.com.gusrylmubarok.v1.Address address = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address, com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address.Builder, com.gusrylmubarok.ecommerce.grpc.grpc.v1.AddressOrBuilder> 
        getAddressFieldBuilder() {
      if (addressBuilder_ == null) {
        addressBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address, com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address.Builder, com.gusrylmubarok.ecommerce.grpc.grpc.v1.AddressOrBuilder>(
                getAddress(),
                getParentForChildren(),
                isClean());
        address_ = null;
      }
      return addressBuilder_;
    }

    private java.lang.Object brand_ = "";
    /**
     * <pre>
     * Can be American Express, Diners Club, Discover, JCB, MasterCard, UnionPay, Visa, or Unknown.
     * </pre>
     *
     * <code>string brand = 4;</code>
     * @return The brand.
     */
    public java.lang.String getBrand() {
      java.lang.Object ref = brand_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        brand_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Can be American Express, Diners Club, Discover, JCB, MasterCard, UnionPay, Visa, or Unknown.
     * </pre>
     *
     * <code>string brand = 4;</code>
     * @return The bytes for brand.
     */
    public com.google.protobuf.ByteString
        getBrandBytes() {
      java.lang.Object ref = brand_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        brand_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Can be American Express, Diners Club, Discover, JCB, MasterCard, UnionPay, Visa, or Unknown.
     * </pre>
     *
     * <code>string brand = 4;</code>
     * @param value The brand to set.
     * @return This builder for chaining.
     */
    public Builder setBrand(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      brand_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Can be American Express, Diners Club, Discover, JCB, MasterCard, UnionPay, Visa, or Unknown.
     * </pre>
     *
     * <code>string brand = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearBrand() {
      
      brand_ = getDefaultInstance().getBrand();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Can be American Express, Diners Club, Discover, JCB, MasterCard, UnionPay, Visa, or Unknown.
     * </pre>
     *
     * <code>string brand = 4;</code>
     * @param value The bytes for brand to set.
     * @return This builder for chaining.
     */
    public Builder setBrandBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      brand_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object country_ = "";
    /**
     * <pre>
     * Two-letter ISO code representing the country of the card. You could use this attribute
     * to get a sense of the international breakdown of cards you’ve collected.
     * </pre>
     *
     * <code>string country = 5;</code>
     * @return The country.
     */
    public java.lang.String getCountry() {
      java.lang.Object ref = country_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        country_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Two-letter ISO code representing the country of the card. You could use this attribute
     * to get a sense of the international breakdown of cards you’ve collected.
     * </pre>
     *
     * <code>string country = 5;</code>
     * @return The bytes for country.
     */
    public com.google.protobuf.ByteString
        getCountryBytes() {
      java.lang.Object ref = country_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        country_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Two-letter ISO code representing the country of the card. You could use this attribute
     * to get a sense of the international breakdown of cards you’ve collected.
     * </pre>
     *
     * <code>string country = 5;</code>
     * @param value The country to set.
     * @return This builder for chaining.
     */
    public Builder setCountry(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      country_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Two-letter ISO code representing the country of the card. You could use this attribute
     * to get a sense of the international breakdown of cards you’ve collected.
     * </pre>
     *
     * <code>string country = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearCountry() {
      
      country_ = getDefaultInstance().getCountry();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Two-letter ISO code representing the country of the card. You could use this attribute
     * to get a sense of the international breakdown of cards you’ve collected.
     * </pre>
     *
     * <code>string country = 5;</code>
     * @param value The bytes for country to set.
     * @return This builder for chaining.
     */
    public Builder setCountryBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      country_ = value;
      onChanged();
      return this;
    }

    private int expMonth_ ;
    /**
     * <pre>
     * Two-digit number representing the card’s expiration month.
     * </pre>
     *
     * <code>uint32 expMonth = 6;</code>
     * @return The expMonth.
     */
    @java.lang.Override
    public int getExpMonth() {
      return expMonth_;
    }
    /**
     * <pre>
     * Two-digit number representing the card’s expiration month.
     * </pre>
     *
     * <code>uint32 expMonth = 6;</code>
     * @param value The expMonth to set.
     * @return This builder for chaining.
     */
    public Builder setExpMonth(int value) {
      
      expMonth_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Two-digit number representing the card’s expiration month.
     * </pre>
     *
     * <code>uint32 expMonth = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearExpMonth() {
      
      expMonth_ = 0;
      onChanged();
      return this;
    }

    private int expYear_ ;
    /**
     * <pre>
     * Four-digit number representing the card’s expiration year.
     * </pre>
     *
     * <code>uint32 expYear = 7;</code>
     * @return The expYear.
     */
    @java.lang.Override
    public int getExpYear() {
      return expYear_;
    }
    /**
     * <pre>
     * Four-digit number representing the card’s expiration year.
     * </pre>
     *
     * <code>uint32 expYear = 7;</code>
     * @param value The expYear to set.
     * @return This builder for chaining.
     */
    public Builder setExpYear(int value) {
      
      expYear_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Four-digit number representing the card’s expiration year.
     * </pre>
     *
     * <code>uint32 expYear = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearExpYear() {
      
      expYear_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object fingerprint_ = "";
    /**
     * <pre>
     * Uniquely identifies this particular card number. You can use this attribute to check whether
     * two customers who’ve signed up with you are using the same card number, for example.
     * For payment methods that tokenize card information (Apple Pay, Google Pay),
     * the tokenized number might be provided instead of the underlying card number.
     * Starting May 1, 2021, card fingerprint in India for Connect will change to allow
     * two fingerprints for the same card — one for India and one for the rest of the world.
     * </pre>
     *
     * <code>string fingerprint = 8;</code>
     * @return The fingerprint.
     */
    public java.lang.String getFingerprint() {
      java.lang.Object ref = fingerprint_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fingerprint_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Uniquely identifies this particular card number. You can use this attribute to check whether
     * two customers who’ve signed up with you are using the same card number, for example.
     * For payment methods that tokenize card information (Apple Pay, Google Pay),
     * the tokenized number might be provided instead of the underlying card number.
     * Starting May 1, 2021, card fingerprint in India for Connect will change to allow
     * two fingerprints for the same card — one for India and one for the rest of the world.
     * </pre>
     *
     * <code>string fingerprint = 8;</code>
     * @return The bytes for fingerprint.
     */
    public com.google.protobuf.ByteString
        getFingerprintBytes() {
      java.lang.Object ref = fingerprint_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fingerprint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Uniquely identifies this particular card number. You can use this attribute to check whether
     * two customers who’ve signed up with you are using the same card number, for example.
     * For payment methods that tokenize card information (Apple Pay, Google Pay),
     * the tokenized number might be provided instead of the underlying card number.
     * Starting May 1, 2021, card fingerprint in India for Connect will change to allow
     * two fingerprints for the same card — one for India and one for the rest of the world.
     * </pre>
     *
     * <code>string fingerprint = 8;</code>
     * @param value The fingerprint to set.
     * @return This builder for chaining.
     */
    public Builder setFingerprint(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      fingerprint_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Uniquely identifies this particular card number. You can use this attribute to check whether
     * two customers who’ve signed up with you are using the same card number, for example.
     * For payment methods that tokenize card information (Apple Pay, Google Pay),
     * the tokenized number might be provided instead of the underlying card number.
     * Starting May 1, 2021, card fingerprint in India for Connect will change to allow
     * two fingerprints for the same card — one for India and one for the rest of the world.
     * </pre>
     *
     * <code>string fingerprint = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearFingerprint() {
      
      fingerprint_ = getDefaultInstance().getFingerprint();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Uniquely identifies this particular card number. You can use this attribute to check whether
     * two customers who’ve signed up with you are using the same card number, for example.
     * For payment methods that tokenize card information (Apple Pay, Google Pay),
     * the tokenized number might be provided instead of the underlying card number.
     * Starting May 1, 2021, card fingerprint in India for Connect will change to allow
     * two fingerprints for the same card — one for India and one for the rest of the world.
     * </pre>
     *
     * <code>string fingerprint = 8;</code>
     * @param value The bytes for fingerprint to set.
     * @return This builder for chaining.
     */
    public Builder setFingerprintBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      fingerprint_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object funding_ = "";
    /**
     * <pre>
     * Card funding type. Can be credit, debit, prepaid, or unknown.
     * </pre>
     *
     * <code>string funding = 9;</code>
     * @return The funding.
     */
    public java.lang.String getFunding() {
      java.lang.Object ref = funding_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        funding_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Card funding type. Can be credit, debit, prepaid, or unknown.
     * </pre>
     *
     * <code>string funding = 9;</code>
     * @return The bytes for funding.
     */
    public com.google.protobuf.ByteString
        getFundingBytes() {
      java.lang.Object ref = funding_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        funding_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Card funding type. Can be credit, debit, prepaid, or unknown.
     * </pre>
     *
     * <code>string funding = 9;</code>
     * @param value The funding to set.
     * @return This builder for chaining.
     */
    public Builder setFunding(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      funding_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Card funding type. Can be credit, debit, prepaid, or unknown.
     * </pre>
     *
     * <code>string funding = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearFunding() {
      
      funding_ = getDefaultInstance().getFunding();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Card funding type. Can be credit, debit, prepaid, or unknown.
     * </pre>
     *
     * <code>string funding = 9;</code>
     * @param value The bytes for funding to set.
     * @return This builder for chaining.
     */
    public Builder setFundingBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      funding_ = value;
      onChanged();
      return this;
    }

    private int installments_ ;
    /**
     * <code>uint32 installments = 10;</code>
     * @return The installments.
     */
    @java.lang.Override
    public int getInstallments() {
      return installments_;
    }
    /**
     * <code>uint32 installments = 10;</code>
     * @param value The installments to set.
     * @return This builder for chaining.
     */
    public Builder setInstallments(int value) {
      
      installments_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 installments = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearInstallments() {
      
      installments_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object last4_ = "";
    /**
     * <pre>
     * The last four digits of the card.
     * </pre>
     *
     * <code>string last4 = 11;</code>
     * @return The last4.
     */
    public java.lang.String getLast4() {
      java.lang.Object ref = last4_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        last4_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The last four digits of the card.
     * </pre>
     *
     * <code>string last4 = 11;</code>
     * @return The bytes for last4.
     */
    public com.google.protobuf.ByteString
        getLast4Bytes() {
      java.lang.Object ref = last4_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        last4_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The last four digits of the card.
     * </pre>
     *
     * <code>string last4 = 11;</code>
     * @param value The last4 to set.
     * @return This builder for chaining.
     */
    public Builder setLast4(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      last4_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The last four digits of the card.
     * </pre>
     *
     * <code>string last4 = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearLast4() {
      
      last4_ = getDefaultInstance().getLast4();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The last four digits of the card.
     * </pre>
     *
     * <code>string last4 = 11;</code>
     * @param value The bytes for last4 to set.
     * @return This builder for chaining.
     */
    public Builder setLast4Bytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      last4_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object customer_ = "";
    /**
     * <pre>
     * The customer that this card belongs to. This attribute will not be in the card object
     * if the card belongs to an account or recipient instead.
     * </pre>
     *
     * <code>string customer = 12;</code>
     * @return The customer.
     */
    public java.lang.String getCustomer() {
      java.lang.Object ref = customer_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        customer_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The customer that this card belongs to. This attribute will not be in the card object
     * if the card belongs to an account or recipient instead.
     * </pre>
     *
     * <code>string customer = 12;</code>
     * @return The bytes for customer.
     */
    public com.google.protobuf.ByteString
        getCustomerBytes() {
      java.lang.Object ref = customer_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        customer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The customer that this card belongs to. This attribute will not be in the card object
     * if the card belongs to an account or recipient instead.
     * </pre>
     *
     * <code>string customer = 12;</code>
     * @param value The customer to set.
     * @return This builder for chaining.
     */
    public Builder setCustomer(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      customer_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The customer that this card belongs to. This attribute will not be in the card object
     * if the card belongs to an account or recipient instead.
     * </pre>
     *
     * <code>string customer = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearCustomer() {
      
      customer_ = getDefaultInstance().getCustomer();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The customer that this card belongs to. This attribute will not be in the card object
     * if the card belongs to an account or recipient instead.
     * </pre>
     *
     * <code>string customer = 12;</code>
     * @param value The bytes for customer to set.
     * @return This builder for chaining.
     */
    public Builder setCustomerBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      customer_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.gusrylmubarok.v1.Card)
  }

  // @@protoc_insertion_point(class_scope:com.gusrylmubarok.v1.Card)
  private static final com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card();
  }

  public static com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Card>
      PARSER = new com.google.protobuf.AbstractParser<Card>() {
    @java.lang.Override
    public Card parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Card(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Card> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Card> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.gusrylmubarok.ecommerce.grpc.grpc.v1.Card getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

