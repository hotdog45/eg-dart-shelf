// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PaymentGatewayService.proto

package com.gusrylmubarok.ecommerce.grpc.grpc.v1;

public interface CreateChargeReqOrBuilder extends
    // @@protoc_insertion_point(interface_extends:com.gusrylmubarok.v1.CreateChargeReq)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   *Required. Amount intended to be collected by this payment. A positive integer representing how
   * much to charge in the smallest currency unit (e.g., 100 cents to charge $1.00 or 100 to charge
   * ¥100, a zero-decimal currency). The minimum amount is $0.50 US or equivalent in charge currency.
   *The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).
   * </pre>
   *
   * <code>uint32 amount = 1;</code>
   * @return The amount.
   */
  int getAmount();

  /**
   * <pre>
   * Required. Three-letter ISO currency code, in lowercase.
   * </pre>
   *
   * <code>string currency = 2;</code>
   * @return The currency.
   */
  java.lang.String getCurrency();
  /**
   * <pre>
   * Required. Three-letter ISO currency code, in lowercase.
   * </pre>
   *
   * <code>string currency = 2;</code>
   * @return The bytes for currency.
   */
  com.google.protobuf.ByteString
      getCurrencyBytes();

  /**
   * <pre>
   * Optional
   * </pre>
   *
   * <code>string customerId = 3;</code>
   * @return The customerId.
   */
  java.lang.String getCustomerId();
  /**
   * <pre>
   * Optional
   * </pre>
   *
   * <code>string customerId = 3;</code>
   * @return The bytes for customerId.
   */
  com.google.protobuf.ByteString
      getCustomerIdBytes();

  /**
   * <pre>
   * optional. An arbitrary string which you can attach to a Charge object. It is displayed when
   * in the web interface alongside the charge. Note that if you use Stripe to send automatic email
   * receipts to your customers, your receipt emails will include the description of the charge(s)
   * that they are describing.
   * </pre>
   *
   * <code>string description = 4;</code>
   * @return The description.
   */
  java.lang.String getDescription();
  /**
   * <pre>
   * optional. An arbitrary string which you can attach to a Charge object. It is displayed when
   * in the web interface alongside the charge. Note that if you use Stripe to send automatic email
   * receipts to your customers, your receipt emails will include the description of the charge(s)
   * that they are describing.
   * </pre>
   *
   * <code>string description = 4;</code>
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString
      getDescriptionBytes();

  /**
   * <pre>
   * Optional. The email address to which this charge’s receipt will be sent. The receipt will not
   * be sent until the charge is paid, and no receipts will be sent for test mode charges. If this
   * charge is for a Customer, the email address specified here will override the customer’s email
   * address. If receiptEmail is specified for a charge in live mode, a receipt will be sent
   * regardless of your email settings.
   * </pre>
   *
   * <code>string receiptEmail = 5;</code>
   * @return The receiptEmail.
   */
  java.lang.String getReceiptEmail();
  /**
   * <pre>
   * Optional. The email address to which this charge’s receipt will be sent. The receipt will not
   * be sent until the charge is paid, and no receipts will be sent for test mode charges. If this
   * charge is for a Customer, the email address specified here will override the customer’s email
   * address. If receiptEmail is specified for a charge in live mode, a receipt will be sent
   * regardless of your email settings.
   * </pre>
   *
   * <code>string receiptEmail = 5;</code>
   * @return The bytes for receiptEmail.
   */
  com.google.protobuf.ByteString
      getReceiptEmailBytes();

  /**
   * <pre>
   * Optional. A payment source to be charged. This can be the ID of a card (i.e., credit or debit
   * card), a bank account, a source, a token, or a connected account. For certain sources—namely,
   *cards, bank accounts, and attached sources—you must also pass the ID of the associated customer.
   * </pre>
   *
   * <code>string sourceId = 6;</code>
   * @return The sourceId.
   */
  java.lang.String getSourceId();
  /**
   * <pre>
   * Optional. A payment source to be charged. This can be the ID of a card (i.e., credit or debit
   * card), a bank account, a source, a token, or a connected account. For certain sources—namely,
   *cards, bank accounts, and attached sources—you must also pass the ID of the associated customer.
   * </pre>
   *
   * <code>string sourceId = 6;</code>
   * @return The bytes for sourceId.
   */
  com.google.protobuf.ByteString
      getSourceIdBytes();

  /**
   * <pre>
   * Optional. For card charges
   * </pre>
   *
   * <code>string statementDescriptor = 7;</code>
   * @return The statementDescriptor.
   */
  java.lang.String getStatementDescriptor();
  /**
   * <pre>
   * Optional. For card charges
   * </pre>
   *
   * <code>string statementDescriptor = 7;</code>
   * @return The bytes for statementDescriptor.
   */
  com.google.protobuf.ByteString
      getStatementDescriptorBytes();
}
