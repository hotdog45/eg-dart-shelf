// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PaymentGatewayService.proto

package com.gusrylmubarok.ecommerce.grpc.grpc.v1;

public interface CardOrBuilder extends
    // @@protoc_insertion_point(interface_extends:com.gusrylmubarok.v1.Card)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string id = 1;</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * Cardholder name.
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Cardholder name.
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <code>.com.gusrylmubarok.v1.Address address = 3;</code>
   * @return Whether the address field is set.
   */
  boolean hasAddress();
  /**
   * <code>.com.gusrylmubarok.v1.Address address = 3;</code>
   * @return The address.
   */
  com.gusrylmubarok.ecommerce.grpc.grpc.v1.Address getAddress();
  /**
   * <code>.com.gusrylmubarok.v1.Address address = 3;</code>
   */
  com.gusrylmubarok.ecommerce.grpc.grpc.v1.AddressOrBuilder getAddressOrBuilder();

  /**
   * <pre>
   * Can be American Express, Diners Club, Discover, JCB, MasterCard, UnionPay, Visa, or Unknown.
   * </pre>
   *
   * <code>string brand = 4;</code>
   * @return The brand.
   */
  java.lang.String getBrand();
  /**
   * <pre>
   * Can be American Express, Diners Club, Discover, JCB, MasterCard, UnionPay, Visa, or Unknown.
   * </pre>
   *
   * <code>string brand = 4;</code>
   * @return The bytes for brand.
   */
  com.google.protobuf.ByteString
      getBrandBytes();

  /**
   * <pre>
   * Two-letter ISO code representing the country of the card. You could use this attribute
   * to get a sense of the international breakdown of cards you’ve collected.
   * </pre>
   *
   * <code>string country = 5;</code>
   * @return The country.
   */
  java.lang.String getCountry();
  /**
   * <pre>
   * Two-letter ISO code representing the country of the card. You could use this attribute
   * to get a sense of the international breakdown of cards you’ve collected.
   * </pre>
   *
   * <code>string country = 5;</code>
   * @return The bytes for country.
   */
  com.google.protobuf.ByteString
      getCountryBytes();

  /**
   * <pre>
   * Two-digit number representing the card’s expiration month.
   * </pre>
   *
   * <code>uint32 expMonth = 6;</code>
   * @return The expMonth.
   */
  int getExpMonth();

  /**
   * <pre>
   * Four-digit number representing the card’s expiration year.
   * </pre>
   *
   * <code>uint32 expYear = 7;</code>
   * @return The expYear.
   */
  int getExpYear();

  /**
   * <pre>
   * Uniquely identifies this particular card number. You can use this attribute to check whether
   * two customers who’ve signed up with you are using the same card number, for example.
   * For payment methods that tokenize card information (Apple Pay, Google Pay),
   * the tokenized number might be provided instead of the underlying card number.
   * Starting May 1, 2021, card fingerprint in India for Connect will change to allow
   * two fingerprints for the same card — one for India and one for the rest of the world.
   * </pre>
   *
   * <code>string fingerprint = 8;</code>
   * @return The fingerprint.
   */
  java.lang.String getFingerprint();
  /**
   * <pre>
   * Uniquely identifies this particular card number. You can use this attribute to check whether
   * two customers who’ve signed up with you are using the same card number, for example.
   * For payment methods that tokenize card information (Apple Pay, Google Pay),
   * the tokenized number might be provided instead of the underlying card number.
   * Starting May 1, 2021, card fingerprint in India for Connect will change to allow
   * two fingerprints for the same card — one for India and one for the rest of the world.
   * </pre>
   *
   * <code>string fingerprint = 8;</code>
   * @return The bytes for fingerprint.
   */
  com.google.protobuf.ByteString
      getFingerprintBytes();

  /**
   * <pre>
   * Card funding type. Can be credit, debit, prepaid, or unknown.
   * </pre>
   *
   * <code>string funding = 9;</code>
   * @return The funding.
   */
  java.lang.String getFunding();
  /**
   * <pre>
   * Card funding type. Can be credit, debit, prepaid, or unknown.
   * </pre>
   *
   * <code>string funding = 9;</code>
   * @return The bytes for funding.
   */
  com.google.protobuf.ByteString
      getFundingBytes();

  /**
   * <code>uint32 installments = 10;</code>
   * @return The installments.
   */
  int getInstallments();

  /**
   * <pre>
   * The last four digits of the card.
   * </pre>
   *
   * <code>string last4 = 11;</code>
   * @return The last4.
   */
  java.lang.String getLast4();
  /**
   * <pre>
   * The last four digits of the card.
   * </pre>
   *
   * <code>string last4 = 11;</code>
   * @return The bytes for last4.
   */
  com.google.protobuf.ByteString
      getLast4Bytes();

  /**
   * <pre>
   * The customer that this card belongs to. This attribute will not be in the card object
   * if the card belongs to an account or recipient instead.
   * </pre>
   *
   * <code>string customer = 12;</code>
   * @return The customer.
   */
  java.lang.String getCustomer();
  /**
   * <pre>
   * The customer that this card belongs to. This attribute will not be in the card object
   * if the card belongs to an account or recipient instead.
   * </pre>
   *
   * <code>string customer = 12;</code>
   * @return The bytes for customer.
   */
  com.google.protobuf.ByteString
      getCustomerBytes();
}
