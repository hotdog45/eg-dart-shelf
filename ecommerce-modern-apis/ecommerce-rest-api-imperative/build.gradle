plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
	id 'org.hidetake.swagger.generator' version '2.19.2'
	id 'jacoco'
}

group = 'com.gusrylmubarok.ecommerce'
version = '1.0.0'
sourceCompatibility = '17'

swaggerSources {
	def typeMappings = 'URI=URI, BigDecimal=BigDecimal, EntityModel=EntityModel'
	def importMappings = 'URI=java.net.URI, BigDecimal=java.math.BigDecimal, EntityModel=org.springframework.hateoas.EntityModel'
	eCommerce {
		def apiYaml = "${rootDir}/src/main/resources/api/openapi.yaml"
		def configJson = "${rootDir}/src/main/resources/api/config.json"
		inputFile = file(apiYaml)
		def ignoreFile = file("${rootDir}/src/main/resources/api/.openapi-generator-ignore")
		code {
			language = 'spring'
			configFile = file(configJson)
			rawOptions = ['--ignore-file-override', ignoreFile, '--type-mappings',
						  typeMappings, '--import-mappings', importMappings] as List<String>
			components = [models: true, apis: true, supportingFiles: 'ApiUtil.java']
			//dependsOn validation // Should be uncommented once plugin starts supporting OA 3 validation
		}
	}
}

compileJava.dependsOn swaggerSources.eCommerce.code
sourceSets.main.java.srcDir "${swaggerSources.eCommerce.code.outputDir}/src/main/java"
sourceSets.main.resources.srcDir "${swaggerSources.eCommerce.code.outputDir}/src/main/resources"

sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/integration/java')
		}
		resources.srcDir file('src/integration/resources')
	}
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
	useJUnitPlatform()
	description = 'Runs the integration tests.'
	group = 'verification'
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

test {
	jvmArgs '--enable-preview'
	useJUnitPlatform()
	finalizedBy(jacocoTestReport)
}

jacoco {
	toolVersion = "0.8.8"
	reportsDirectory = file("$buildDir/jacoco")
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(
					dir: it,
					exclude: [
							'com/gusrylmubarok/ecommerce/rest/model/*',
							'com/gusrylmubarok/ecommerce/rest/*Api.*',
							'com/gusrylmubarok/ecommerce/rest/security/basic/*',
					])
		}))
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.9
			}
		}
	}
}

bootBuildImage {
    imageName = "192.168.80.1:5000/${project.name}:${project.version}"
    environment = ["BP_JVM_VERSION" : "17"]
}

repositories {
	mavenCentral()
}

dependencies {
	// OpenAPI Starts
	swaggerCodegen 'org.openapitools:openapi-generator-cli:6.0.1'
	swaggerUI 'org.webjars:swagger-ui:4.11.1'
	compileOnly 'io.swagger:swagger-annotations:1.6.6'
	compileOnly group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.2.2'
	compileOnly 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.openapitools:jackson-databind-nullable:0.2.3'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
	implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	compileOnly 'io.springfox:springfox-oas:3.0.0'
	// OpenAPI Ends

	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'

	// DB Starts
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.flywaydb:flyway-core'
	runtimeOnly 'com.h2database:h2'
	// DB Ends

	// Security Starts
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'com.auth0:java-jwt:4.0.0'
	// Security Ends

	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testRuntime('com.h2database:h2')
}
